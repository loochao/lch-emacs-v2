;;; Automatically generated on Tue Jan  8 17:31:27 2013
;;; Invoked by LooChao@dynamic-oit-equadnet-a-2 using 23.3.1
(setq-default kill-ring '(#("
;; (add-hook 'message-mode-hook 'lch-turn-on-flyspell)
;; (add-hook 'text-mode-hook 'lch-turn-on-flyspell)
;; (add-hook 'nxml-mode-hook 'lch-turn-on-flyspell)
;; (add-hook 'texinfo-mode-hook 'lch-turn-on-flyspell)
;; (add-hook 'TeX-mode-hook 'lch-turn-on-flyspell)

;; (add-hook 'c-mode-common-hook 'flyspell-prog-mode)
;; (add-hook 'lisp-mode-hook 'flyspell-prog-mode)
;; (add-hook 'emacs-lisp-mode-hook 'flyspell-prog-mode)
" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 56 (face font-lock-comment-face fontified t) 56 59 (face font-lock-comment-delimiter-face fontified t) 59 108 (face font-lock-comment-face fontified t) 108 111 (face font-lock-comment-delimiter-face fontified t) 111 160 (face font-lock-comment-face fontified t) 160 163 (face font-lock-comment-delimiter-face fontified t) 163 215 (face font-lock-comment-face fontified t) 215 218 (face font-lock-comment-delimiter-face fontified t) 218 266 (face font-lock-comment-face fontified t) 266 267 (fontified t) 267 270 (face font-lock-comment-delimiter-face fontified t) 270 321 (face font-lock-comment-face fontified t) 321 324 (face font-lock-comment-delimiter-face fontified t) 324 371 (face font-lock-comment-face fontified t) 371 374 (face font-lock-comment-delimiter-face fontified t) 374 427 (face font-lock-comment-face fontified t)) #("(defun lch-turn-on-flyspell ()
  \"Force flyspell-mode on using a positive argument.  For use in hooks.\"
  (interactive)
  (flyspell-mode +1))
" 0 1 (fontified t) 1 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 27 (fontified t face font-lock-function-name-face) 27 30 (fontified t) 30 31 (fontified t) 31 33 (fontified t) 33 103 (face font-lock-string-face fontified t) 103 104 (fontified t) 104 119 (fontified t) 119 120 (fontified t) 120 141 (fontified t) 141 142 (fontified t)) #("(dolist (hook '(lisp-mode-hook
                emacs-lisp-mode-hook
                scheme-mode-hook
                clojure-mode-hook
                ruby-mode-hook
                yaml-mode
                python-mode-hook
                shell-mode-hook
                php-mode-hook
                css-mode-hook
                haskell-mode-hook
                caml-mode-hook
                nxml-mode-hook
                crontab-mode-hook
                perl-mode-hook
                tcl-mode-hook
                javascript-mode-hook))
  (add-hook hook 'flyspell-prog-mode))
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 287 (fontified t) 287 547 (fontified t) 547 586 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #(";;; ibuffer-git
(require 'ibuffer-git)

;;nicely format the ibuffer and include git-status
(setq ibuffer-formats '((mark modified read-only git-status-mini \" \"
                              (name 18 18 :left :elide)
                              \" \"
                              (size 9 -1 :right)
                              \" \"
                              (git-status 8 8 :left :elide)
                              \" \"
                              (mode 16 16 :left :elide)
                              \" \" filename-and-process)))

" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 16 (face font-lock-comment-face fontified t) 16 17 (fontified t) 17 24 (face font-lock-keyword-face fontified t) 24 26 (fontified t) 26 37 (face font-lock-constant-face fontified t) 37 40 (fontified t) 40 42 (face font-lock-comment-delimiter-face fontified t) 42 91 (face font-lock-comment-face fontified t) 91 156 (fontified t) 156 159 (face font-lock-string-face fontified t) 159 202 (fontified t) 202 207 (face font-lock-builtin-face fontified t) 207 208 (fontified t) 208 214 (face font-lock-builtin-face fontified t) 214 246 (fontified t) 246 249 (face font-lock-string-face fontified t) 249 250 (fontified t) 250 291 (fontified t) 291 297 (face font-lock-builtin-face fontified t) 297 329 (fontified t) 329 332 (face font-lock-string-face fontified t) 332 379 (fontified t) 379 384 (face font-lock-builtin-face fontified t) 384 385 (fontified t) 385 391 (face font-lock-builtin-face fontified t) 391 423 (fontified t) 423 426 (face font-lock-string-face fontified t) 426 469 (fontified t) 469 474 (face font-lock-builtin-face fontified t) 474 475 (fontified t) 475 481 (face font-lock-builtin-face fontified t) 481 513 (fontified t) 513 516 (face font-lock-string-face fontified t) 516 541 (fontified t) 541 542 (fontified t)) #("(setq ibuffer-filter-group-name-face 'font-lock-doc-face)" 0 57 (fontified t))))
(setq-default session-file-alist '(("/Volumes/DATA/Dropbox/.emacs.d/rc/dotEmacs" 4629 4286 1 nil nil 4629 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-elisp.el" 13695 14146 1 nil nil 14146 (overwrite-mode)) ("~/Downloads/emacs.d/init-flyspell.el" 228 228 1 nil nil 228 (overwrite-mode)) ("~/Downloads/emacs.d/init-ibuffer.el" 1155 nil 1 nil nil 1155 (overwrite-mode)) ("~/Downloads/emacs.d/init-auto-complete.el" 367 nil 1 nil nil 367 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-elisp.el_archive" 1 1 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-conf.el" 1206 43 1 nil nil 1195 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-util.el" 7068 7068 1 nil nil 7068 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-init.el" 11115 11059 1 nil nil 11062 (overwrite-mode)) ("~/Downloads/demo-qi/ido-conf.el" 110 nil 1 nil nil 125 (overwrite-mode)) ("~/Downloads/popwin-conf.el" 1 1 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/var/.bm-repository" 70 nil 1 nil nil 18 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-binding.el" 1694 26869 1 nil nil 1694 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-env.el" 6043 6043 1 nil nil 6043 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-lang.el" 1110 4960 1 nil nil 1110 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-elisp.el_archive2" 1526 1526 1 nil nil 1526 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-shell.el" 1977 1832 1 nil nil 1977 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-mac.el" 2514 2448 1 nil nil 2480 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-shell.el_archive" 2839 235 1 nil nil 2702 (overwrite-mode)) ("~/Downloads/kaka/emacs-live/packs/dev/bindings-pack/config/default-bindings.el" 2329 1 1 nil nil 2329 (overwrite-mode)) ("~/Downloads/kaka/emacs-live/packs/dev/foundation-pack/config/shell-conf.el" 1 1 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/win-switch.el" 2555 2502 1 nil nil 2555 (overwrite-mode)) ("~/Downloads/kaka/emacs-live/packs/dev/foundation-pack/config/ido-conf.el" 1 1 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-ui.el" 1171 1081 1 nil nil 1426 (overwrite-mode)) ("~/Downloads/kaka/emacs-live/packs/dev/foundation-pack/config/zone-conf.el" 1 nil 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-tramp.el" 3743 3711 1 nil nil 3743 (overwrite-mode)) ("~/Downloads/kaka/emacs-live/packs/dev/foundation-pack/config/ibuffer-git-conf.el" 35 nil 1 nil nil 35 (overwrite-mode)) ("~/Downloads/kaka/emacs-live/packs/dev/foundation-pack/config/osx.el" 587 nil 1 nil nil 587 (overwrite-mode)) ("~/Downloads/kaka/emacs-live/packs/dev/foundation-pack/config/recentf-conf.el" 1 nil 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/xwl-elisp/xwl-util.el" 3118 3154 1 nil nil 3118 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-binding.el" 2243 1 1 nil nil 2243 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/dotEmacs" 3580 2187 1 nil nil 3527 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-env.el" 1982 1983 1 nil nil 1982 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-elisp-el-get.el" 693 nil 1 nil nil 693 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-pgm.el" 1608 993 1 nil nil 1022 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-w3m.el" 137 887 1 nil nil 137 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-emms.el" 2097 563 1 nil nil 1208 (overwrite-mode))))
(setq-default file-name-history '("~/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-flyspell.el" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-windows.el" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-javascript.el" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-git.el" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-site-lisp.el" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-editing-utils.el" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-python-mode.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-osx-keys.el" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-ibuffer.el" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-crontab.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs.d/init-auto-complete.el" "~/Downloads/emacs.d/init-auto-complete.el" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/rc/lch-conf.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/dotEmacs" "~/.emacs" "~/Dropbox/.emacs.d/rc/lch-elisp.el_archive" "~/Dropbox/.emacs.d/rc/lch-inbox.el" "~/Dropbox/.emacs.d/rc/lch-mouse.el" "~/Dropbox/.emacs.d/rc/lch-util.el" "~/Dropbox/.emacs.d/site-lisp/color-theme-6.6.0/themes/color-theme-cyberpunk.el" "~/Dropbox/.emacs.d/rc/lch-binding.el" "~/Dropbox/.emacs.d/rc/lch-lychee.el" "~/Downloads/demo-qi" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Temporary/Dan.Eqn.Simulation/dan_eqn.c" "~/Downloads/demo-qi/ido-conf.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/popwin-conf.el" "~/Dropbox/.emacs.d/var/.bm-repository" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/kaka/emacs-live/lib/live-core.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/kaka/emacs-live/installer/install-emacs-live.sh" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/kaka/emacs-live/packs/update-live-packs" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/kaka/emacs-live/packs/live/bindings-pack/config/default-bindings.el" "~/Dropbox/.emacs.d/rc/lch-env.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/kaka/emacs-live/packs/live/lang-pack/lib/apache-mode.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/kaka/emacs-live/packs/live/foundation-pack/lib/smooth-scrolling.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/site-lisp/popwin/popwin.el" "~/Dropbox/.emacs.d/site-lisp/popwin/popwin.el"))
(setq-default search-ring '("dired-x" "pop" "conf" "lch-el" "env" "var-dir" "lch-env" "lch-eli" "yas" "yasni" "ya" "grep" "hs" "bind" ".emacs.d" "caution"))
(setq-default regexp-search-ring '("flys" "ido" "ibuf" "ibuff" "auto-comp" "auto" "hig" "term" "inb" "twitter" "message" "pop" "elisp" "env" "imenu" "smex"))
(setq-default buffer-name-history '("init-ibuffer.el" "*shell*" "z:/emacs.d" "init-auto-complete.el" "lch-elisp.el" "rc" "lch-elisp.el_archive" "lch-conf.el" "*grep*" "*scratch*" "dotEmacs" "_archive" "lch-binding.el" "*Compile-Log*" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-util.el_archive" "应用授权_-_新浪微博" " *Minibuf-1*" "lch-util.el" "*Messages*" "demo-qi" "*terminal<2>*" "About_emacs-w3m" "About_emacs-w3m<2>" "About_emacs-w3m<3>"))
(setq-default command-history '((switch-to-buffer "init-ibuffer.el") (kill-buffer "*shell*") (switch-to-buffer "z:/emacs.d") (kill-buffer "init-auto-complete.el") (switch-to-buffer "init-auto-complete.el") (switch-to-buffer "lch-elisp.el") (term "/bin/bash") (switch-to-buffer "rc") (switch-to-buffer "lch-elisp.el_archive") (switch-to-buffer "lch-conf.el") (kill-buffer "*grep*") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e popwin") (find-file "~/Dropbox/.emacs.d/rc/lch-elisp.el" t) (find-file "~/Dropbox/.emacs.d/rc/lch-conf.el" t) (kill-buffer "*scratch*") (switch-to-buffer "*scratch*") (switch-to-buffer "dotEmacs") (kill-buffer "lch-elisp.el") (kill-buffer "_archive") (switch-to-buffer "lch-binding.el") (shell nil) (switch-to-buffer "*grep*") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'M-1'") (switch-to-buffer "*Compile-Log*") (kill-buffer "rc") (kill-buffer "/Users/LooChao/Dropbox/.emacs.d/rc/lch-util.el_archive") (ace-jump-word-mode 115) (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'C-c j'") (iy-go-to-char 1 114) (iy-go-to-char 1 103) (kill-buffer "应用授权_-_新浪微博") (kill-buffer " *Minibuf-1*") (kill-buffer "lch-util.el") (switch-to-buffer "*Messages*") (switch-to-buffer "*shell*")))
(setq-default dired-regexp-history '(".*\\.el" ".*\\.gz" ".*\\.el$" ".*" "*.el$" "*"))
(setq-default dired-shell-command-history '("chmod 644" "grep grep"))
(setq-default extended-command-history '("eshell"))
(setq-default face-name-history '("w3m-tab-background" "default"))
(setq-default grep-find-history '("find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e popwin" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'M-1'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'C-c j'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e byte-compile" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e '<f1> C'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e indent-buffer" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e goto-line" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e ace-jump" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e outline-mode" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e undo" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e let" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e M-1" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'C-c f'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'C-x f'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e sudo" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e cua" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e winner" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e whitespace-cleanup" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e whitespace" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e indent-tab" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e indent" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e indent-tab-mode" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'C-c m d'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-c m d" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e xwl-insert-date" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e xwl" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e xwl-insert" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-6" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e "))
(setq-default gud-gdb-history '("gdb --annotate=3 duffing_euler"))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default hi-lock-regexp-history '("ffap"))
(setq-default ido-buffer-history '("she" "dem" "*me"))
(setq-default ido-file-history '("lch-elisp.el_archive" "lch-shell.el_archive" "xwl-u" "xwl" "lch-el" "dired" "si" "dot" "lch-conf" "lch-elisp" "lch-eli" "rc" "the" "co" "lch-util" "lch-bind" ".emacs" "lch-elis" "el" ".em" "drop"))
(setq-default minibuffer-history '("/bin/bash" ";;" "shell" "she" "zone" "my-di" "lch-asci" "auto-fi" "eval-re" "tu" "lch" "lch-open" "emacs-ver" "explicit-shell-file-name" "win-sw" "live-ido" "zone-when" "zone-programs" "sudo-edit" "system-name" "require-final-newline" "truncate-partial-width-windows" "redisplay-dont-pause" "shift-select-mode" "delete-by-moving-to-trash" "confirm-nonexistent-file-or-buffer" "gz" "comment-r" "eval-bu"))
(setq-default org-read-date-history '("   "))
(setq-default query-replace-history '("0.4" "15" "0.3" "12" "40" "30" "define-key global-map" "global-set-key" "20" "10" "#B" "#C" "lch-modeline-font" "lch-modeline" "lch" "live" "

" "
+" "
" "" "+" "" "有没有一句话让你流泪 - 新浪微博-随时随地分享身边的新鲜事\345\204\277 - Firefox" "微博搜索 - 新浪微博-随时随地分享身边的新鲜事\345\204\277 - Firefox
" "^ *" "^[ 	]" "^[ \\t]+" "^\\w*" ".*www.txtbbs.com.*$"))
(setq-default regexp-history '("ffap"))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("grep var-dir" "grep emacs-var-dir" "grep live.*lib" "find . -type f |grep ." "pwd"))
(setq-default smex-history '(shell zone auto-fill-mode eval-region emacs-version cd lm))
(setq-default w3m-input-url-history '("http://www.princeton.edu/~chaol" "http://paste.lisp.org/display/133715" "http://paste.lisp.org/display/133715#1" "https://github.com/peterhil/emacs-config" "http://www.emacswiki.org/cgi-bin/wiki.pl?Command" "http://p3rl.org/IPC::System::Simple" "http://emacsformacosx.com" "http://api.t.sina.com.cn/oauth/authorize?oauth_token=5837f22c4c41b80d19b60634dd83f027" "http://orgmode.org/worg/dev" "http://orgmode.org/worg/dev/org-build-system.html" "http://orgmode.org/worg/dev/org-build-system.html#sec-4" "http://traeki.freeshell.org/files/viper-sample" "http://www.emacswiki.org/emacs/AnythingScreenshotNarrowingCandidates" "http://www.iciba.com/?s=%E7%8E%B0%E5%9C%A8" "http://www.emacswiki.org/emacs/Anything" "http://www.emacswiki.org/emacs/AnythingScreenshotAllCandidates"))
